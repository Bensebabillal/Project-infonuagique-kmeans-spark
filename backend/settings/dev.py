"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from datetime import timedelta

import dj_database_url

SETTINGS_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(SETTINGS_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+um0lv(w_sqie)pb2t)$8daij#73w4n$vlez7zu&5@)vsv5%4%'

SILENCED_SYSTEM_CHECKS = ['admin.E410']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*', 'korrix.herokuapp.com', ]

# Application definitionnn,m

INSTALLED_APPS = [
    'jet.dashboard',
    'jet',
    # 'backend.app.SuitConfig',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'user_sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',  # < Per Whitenoise, to disable built in
    'django.contrib.staticfiles',
    'drf_yasg',
    'django.contrib.sites',
    'corsheaders',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'dj_rest_auth.registration',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',

    'django_countries',
    'captcha',
    'phonenumber_field',
    'widget_tweaks',
    'osm_jet',
    "django_bigbluebutton",
    # 'guardian',
    'private_storage',
    'user',

    'django_rest_passwordreset',

    'import_export',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'user_sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Add dist to
        'DIRS': ['dist', 'public', 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    # 'default': dj_database_url.config(
    #     default='postgres://lafdrnzaydajme:593d8c17f12c0010ef1b0404de6c4ffea5d93fe99414688eebb3796c03b62309@ec2-79-125-86-58.eu-west-1.compute.amazonaws.com:5432/d4hfsb06saf7vb'
    # )
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }

    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'korrixco_DB',
    #     'USER': 'korrixco_root',
    #     'PASSWORD': 'f=UQJ]H&s3Lq',
    #     'HOST': '174.136.12.174',
    #     'PORT': '3306',
    # }

}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

# When Vue Builds, path will be `/static/css/...` so we will have Django Serve
# In Production, it's recommended use an alternative approach such as:
# http://whitenoise.evans.io/en/stable/django.html?highlight=django

# MIDDLEWARE_CLASSES = (
#     'whitenoise.middleware.WhiteNoiseMiddleware',
# )

STATIC_URL = '/static/'
# Place static in the same location as webpack build files
STATIC_ROOT = os.path.join(BASE_DIR, 'dist', 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

##########
# STATIC #
##########

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Insert Whitenoise Middleware at top but below Security Middleware
# MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware',)
# http://whitenoise.evans.io/en/stable/django.html#make-sure-staticfiles-is-configured-correctly


AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",

)

# this config is for :  django-rest-framework
REST_FRAMEWORK = {
    'DATE_FORMAT': '%d/%m/%Y',

    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',

    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 6
}

# private storage
PRIVATE_STORAGE_ROOT = os.path.join(BASE_DIR, 'media/video/private-media/')
PRIVATE_STORAGE_AUTH_FUNCTION = 'private_storage.permissions.allow_authenticated'

# django-user-session
SESSION_ENGINE = 'user_sessions.backends.db'

# Custom User Model
AUTH_USER_MODEL = 'user.CustomUser'
ACCOUNT_ADAPTER = 'user.adapters.CustomUserAdapter'

# for Dj-rest-auth jwt conf
REST_AUTH_REGISTER_SERIALIZERS = {
    "REGISTER_SERIALIZER": "user.api.serializers.CustomRegisterSerializer",
}

REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'user.api.serializers.UserSerializer',

}

REST_USE_JWT = True
JWT_AUTH_COOKIE = 'key'
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=10),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365),
}

# jet conf
JET_SIDE_MENU_COMPACT = False
# Hide the next and previous object arrows
JET_CHANGE_FORM_SIBLING_LINKS = False
# Sets the theme to be OSM and doesn't show theme selector
# JET_DEFAULT_THEME = 'osm'
JET_WIDGET_SELECTOR = False

# JET_THEMES = [
#     {
#         'theme': 'green',
#         'color': '#44b78b',
#         'title': 'Green'
#     },
#     {
#         'theme': 'light-green',
#         'color': '#2faa60',
#         'title': 'Light Green'
#     },
#
# ]

MEDIA_URL = 'http://cdnn.korrix.com/video/'

DEFAULT_FILE_STORAGE = 'storages.backends.ftp.FTPStorage'
FTP_STORAGE_LOCATION = 'ftp://admin@cdnn.korrix.com:=3kQ%8WQ}AqJ@ftp.korrix.com:21'
BASE_URL = 'http://cdnn.korrix.com/video/'
# this is config for django allAuth authentication .
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'none'
# ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_LOGOUT_REDIRECT_URL = "/"
LOGIN_REDIRECT_URL = '/'
# LOGIN_URL = "/"
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = '/?verification=1'
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = '/?verification=1'
OLD_PASSWORD_FIELD_ENABLED = True

# config for send mail
if DEBUG:
    EMAIL_HOST = 'localhost'
    EMAIL_PORT = 1025
    EMAIL_HOST_USER = ''
    EMAIL_HOST_PASSWORD = ''
    EMAIL_USE_TLS = False
    DEFAULT_FROM_EMAIL = 'testing@example.com'
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_USE_TLS = True
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_HOST_USER = 'radja.idir1993@gmail.com'
    EMAIL_HOST_PASSWORD = '02163119800'
    EMAIL_PORT = 587

# CORS_ALLOW_ALL_ORIGINS = True

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/


X_FRAME_OPTIONS = 'ALLOW-FROM http://127.0.0.1:8000/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

RECAPTCHA_PUBLIC_KEY = '6LcPd8YZAAAAAF2z0JkHbaU9B3VIfW08pBDN7s_U'
RECAPTCHA_PRIVATE_KEY = '6LcPd8YZAAAAAHqYxV4EugGUJa2-h8292dKh5KTw'

# MEDIA_ROOT = os.path.join(BASE_DIR, "media")
#
# STATIC_URL = '/static/'
# # Place static in the same location as webpack build files
# STATIC_ROOT = os.path.join(BASE_DIR, 'dist', 'static')
#
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
# ]

SITE_ID = 1

FRONTEND_URL = 'http://' + ALLOWED_HOSTS[1] + ':8080'

CORS_ALLOW_ALL_ORIGINS = True

BBB_API_URL = 'https://classroom.korrix.com/bigbluebutton/api/'
BBB_SECRET_KEY = 'rDGtBFzevXFrrEwidKLUw5655d4ZVvnYOao0E8Oks'
UPDATE_RUNNING_ON_EACH_CALL = True

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
