# Generated by Django 3.2.5 on 2021-07-10 04:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name of Meeting')),
                ('meeting_id', models.CharField(max_length=100, unique=True, verbose_name='Meeting ID')),
                ('attendee_password', models.CharField(max_length=50, verbose_name='Attendee Password')),
                ('moderator_password', models.CharField(max_length=50, verbose_name='Moderator Password')),
                ('is_running', models.BooleanField(default=False, help_text='Indicates whether this meeting is running in BigBlueButton or not!', verbose_name='Is running')),
                ('max_participants', models.IntegerField(default=10, verbose_name='Max Participants')),
                ('welcome_text', models.TextField(default='Welcome!', verbose_name='Meeting Text in Bigbluebutton')),
                ('logout_url', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='URL to visit after user logged out')),
                ('record', models.BooleanField(default=True, verbose_name='Record')),
                ('auto_start_recording', models.BooleanField(default=True, verbose_name='Auto Start Recording')),
                ('allow_start_stop_recording', models.BooleanField(default=True, help_text='Allow the user to start/stop recording. (default true)', verbose_name='Allow Stop/Start Recording')),
                ('webcam_only_for_moderators', models.BooleanField(default=False, help_text='will cause all webcams shared by viewers during this meeting to only appear for moderators', verbose_name='Webcam Only for moderators?')),
                ('lock_settings_disable_cam', models.BooleanField(default=False, help_text='will prevent users from sharing their camera in the meeting', verbose_name='Disable Camera')),
                ('lock_settings_disable_mic', models.BooleanField(default=False, help_text='will only allow user to join listen only', verbose_name='Disable Mic')),
                ('lock_settings_disable_private_chat', models.BooleanField(default=False, help_text='if True will disable private chats in the meeting', verbose_name='Disable Private chat')),
                ('lock_settings_disable_public_chat', models.BooleanField(default=False, help_text='if True will disable public chat in the meeting', verbose_name='Disable public chat')),
                ('lock_settings_disable_note', models.BooleanField(default=False, help_text='if True will disable notes in the meeting.', verbose_name='Disable Note')),
                ('lock_settings_locked_layout', models.BooleanField(default=False, help_text='will lock the layout in the meeting. ', verbose_name='Locked Layout')),
                ('parent_meeting_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Parent Meeting ID')),
                ('internal_meeting_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Internal Meeting ID')),
                ('voice_bridge', models.CharField(blank=True, max_length=50, null=True, verbose_name='Voice Bridge')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meeting',
                'db_table': 'meeting',
            },
        ),
    ]
